// Depth First Search in c#

using System;
using System.Collections.Generic;
using System.Linq;
    
class Node{
        
        public Node left;
        public Node right;
        public int data;
    }
    
class DepthFirstSearch
{
    
    public void DepthFirstSearchOnTree(Node root) 
    {
        Stack<Node> nodes = new Stack<Node>();
        nodes.Push(root);
        
        while(nodes.Count > 0)
        {
            Node node = nodes.Pop();
            
            if(node.right != null)
            {
                nodes.Push(node.right);
            }
            
            if(node.left != null)
            {
                nodes.Push(node.left);
            }
            
            Console.WriteLine(" " + node.data);
            
        }
        
    }
    
    
    
    public  HashSet<int> DepthFirstSearchOnGraph(Node root)
    {
        HashSet<int> visited = new HashSet<int>();
        
        if(!graph.AdjacencyList.ContainsKey(root))
        {
            return visited;
        }
        
        Stack<int> stack = new Stack<int>();
        stack.Push(root.data);
        
        while(stack.Count > 0)
        {
            int vertex = stack.Pop();
            
            if(visited.Contains(vertex))
            {
                continue;
            }
            
            visited.Add(vertex);
            
            foreach(var nieghbour in graph.AdjacencyList[vertex])
            {
                if(!visited.Contains(nieghbour))
                {
                    stack.Push(nieghbour);
                }
            }
            
            return visited;
            
        }
    }
    
}
